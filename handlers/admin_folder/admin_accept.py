from aiogram import Router, types
from aiogram.filters import Command
from sqlalchemy.ext.asyncio import AsyncSession
from functions.all_func import get_category_keyboard, get_order_history, get_user_info
# –≠“∑–æ–¥–∏ router
menu_router = Router()

# –§—É–Ω–∫—Å–∏—è–∏ "–ú–µ–Ω—é" –±–∞—Ä–æ–∏ –Ω–∏—à–æ–Ω –¥–æ–¥–∞–Ω–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è“≥–æ
@menu_router.message(Command(commands=["menu"]))
async def menu_handler(message: types.Message):
    keyboard = await get_category_keyboard()
    await message.answer("–ö–∞—Ç–µ–≥–æ—Ä–∏—è“≥–æ—Ä–æ –∏–Ω—Ç–∏—Ö–æ–± –∫—É–Ω–µ–¥:", reply_markup=keyboard)






# –§—É–Ω–∫—Å–∏—è–∏ "–§–∞—Ä–º–æ–∏—à–æ—Ç" –±–∞—Ä–æ–∏ –Ω–∏—à–æ–Ω –¥–æ–¥–∞–Ω–∏ —Ç–∞—ä—Ä–∏—Ö–∏ —Ñ–∞—Ä–º–æ–∏—à“≥–æ
@menu_router.message(Command(commands=["orders"]))
async def orders_handler(message: types.Message):
    session = SessionLocal()
    user_id = message.from_user.id

    # –ì–∏—Ä–∏—Ñ—Ç–∞–Ω–∏ —Ç–∞—ä—Ä–∏—Ö–∏ —Ñ–∞—Ä–º–æ–∏—à“≥–æ
    orders = await get_order_history(user_id, session)
    
    if not orders:
        await message.answer("–®—É–º–æ “≥–æ–ª–æ —Ñ–∞—Ä–º–æ–∏—à –Ω–∞–¥–æ—Ä–µ–¥.")
        return

    for order in orders:
        order_text = f"**“≤–æ–ª–∞—Ç–∏ —Ñ–∞—Ä–º–æ–∏—à:** {order['status']}\n\n"
        for item in order['items']:
            order_text += (
                f"üì¶ **–ù–æ–º:** {item['name']}\n"
                f"üî¢ **–ú–∏“õ–¥–æ—Ä:** {item['quantity']}\n"
                f"üíµ **–ù–∞—Ä—Ö:** {item['price']} —Å–æ–º–æ–Ω”£\n"
                f"üí∞ **–ù–∞—Ä—Ö–∏ —É–º—É–º”£:** {item['total_price']} —Å–æ–º–æ–Ω”£\n\n"
            )
            if item['image_url']:
                await message.answer_photo(photo=item['image_url'], caption=order_text)
            else:
                await message.answer(order_text)
        
        order_text = f"üí≥ **–ù–∞—Ä—Ö–∏ —É–º—É–º–∏–∏ —Ñ–∞—Ä–º–æ–∏—à:** {order['total_order_price']} —Å–æ–º–æ–Ω”£\n"
    await message.answer(info_text)

